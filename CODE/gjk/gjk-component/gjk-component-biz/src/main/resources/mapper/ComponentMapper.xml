<?xml version="1.0" encoding="UTF-8"?>

<!-- ~ Copyright (c) 2018-2025, inforbus All rights reserved. ~ ~ Redistribution 
	and use in source and binary forms, with or without ~ modification, are permitted 
	provided that the following conditions are met: ~ ~ Redistributions of source 
	code must retain the above copyright notice, ~ this list of conditions and 
	the following disclaimer. ~ Redistributions in binary form must reproduce 
	the above copyright ~ notice, this list of conditions and the following disclaimer 
	in the ~ documentation and/or other materials provided with the distribution. 
	~ Neither the name of the inforbus.com developer nor the names of its ~ contributors 
	may be used to endorse or promote products derived from ~ this software without 
	specific prior written permission. ~ Author: inforbus -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.inforbus.gjk.comp.mapper.ComponentMapper">

	<resultMap id="componentMap"
		type="com.inforbus.gjk.comp.api.entity.Component">
		<id property="id" column="id" />
		<result property="compId" column="comp_id" />
		<result property="compName" column="comp_name" />
		<result property="compFuncname" column="comp_funcname" />
		<result property="userId" column="user_id" />
		<result property="version" column="version" />
		<result property="compImg" column="comp_img" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="compBackupinfo" column="comp_backupinfo" />
		<result property="applyState" column="apply_state" />
		<result property="applyDesc" column="apply_desc" />
		<result property="delFlag" column="del_flag" />
	</resultMap>

	<resultMap id="componentCompDetailMap"
		type="com.inforbus.gjk.comp.api.vo.ComponentVO">
		<id property="id" column="id" />
		<result property="compId" column="comp_id" />
		<result property="compName" column="comp_name" />
		<result property="compFuncname" column="comp_funcname" />
		<result property="userId" column="user_id" />
		<result property="version" column="version" />
		<result property="compImg" column="comp_img" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="description" column="description" />
		<result property="applyState" column="apply_state" />
		<result property="applyDesc" column="apply_desc" />
		<result property="delFlag" column="del_flag" />
		<collection property="detailList"
			ofType="com.inforbus.gjk.comp.api.entity.ComponentDetail"
			select="com.inforbus.gjk.comp.mapper.ComponentDetailMapper.listDetailByCompId"
			column="comp_id">
		</collection>
	</resultMap>

	<resultMap id="componentDetailMap"
		type="com.inforbus.gjk.comp.api.entity.ComponentDetail">
		<id property="id" column="id" />
		<result property="compId" column="comp_id" />
		<result property="fileName" column="file_name" />
		<result property="fileType" column="file_type" />
		<result property="filePath" column="file_path" />
		<result property="version" column="version" />
		<result property="paraentId" column="paraent_id" />
		<result property="paraentIds" column="paraent_ids" />
		<result property="libsId" column="libs_id" />
	</resultMap>

	<resultMap id="structlibsMap"
		type="com.inforbus.gjk.common.core.entity.Structlibs">
		<id property="id" column="id" />
		<result property="parentId" column="parent_id" />
		<result property="childrenIds" column="children_ids" />
		<result property="name" column="name" />
		<result property="version" column="version" />
		<result property="type" column="type" />
		<result property="dataType" column="data_type" />
		<result property="structType" column="struct_type" />
		<result property="dataLength" column="data_length" />
		<result property="permission" column="permission" />
		<result property="sort" column="sort" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="delFlag" column="del_flag" />
		<result property="storageFlag" column="storage_flag" />
		<result property="applyDesc" column="apply_desc" />
	</resultMap>

	<resultMap id="GjkAlgorithmMap"
		type="com.inforbus.gjk.admin.api.entity.GjkAlgorithm">
		<id column="algorithm_id" property="algorithmId" />
		<result column="name" property="name" />
		<result column="permission" property="permission" />
		<result column="parent_id" property="parentId" />
		<result column="sort" property="sort" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="del_flag" property="delFlag" />
	</resultMap>

	<resultMap id="GjkPlatformMap"
		type="com.inforbus.gjk.admin.api.entity.GjkPlatform">
		<id column="platform_id" property="platformId" />
		<result column="name" property="name" />
		<result column="permission" property="permission" />
		<result column="parent_id" property="parentId" />
		<result column="sort" property="sort" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="del_flag" property="delFlag" />
	</resultMap>

	<resultMap id="GjkTestMap"
		type="com.inforbus.gjk.admin.api.entity.GjkTest">
		<id column="test_id" property="testId" />
		<result column="name" property="name" />
		<result column="permission" property="permission" />
		<result column="parent_id" property="parentId" />
		<result column="sort" property="sort" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="del_flag" property="delFlag" />
	</resultMap>

	<sql id="componentSql">
		id,
		comp_id,
		comp_name,
		comp_funcname,
		user_id,
		version,
		comp_img,
		create_time,
		update_time,
		comp_backupinfo,
		apply_state,
		apply_desc,
		del_flag
	</sql>

	<sql id="saveComponentSql">
		id,
		comp_id,
		comp_name,
		comp_funcname,
		user_id,
		version,
		comp_img,
		comp_backupinfo,
		apply_state,
		apply_desc
	</sql>

	<sql id="componentCompDetailSql">
		comp.id,
		comp.comp_id,
		comp.comp_name,
		comp.comp_funcname,
		comp.user_id,
		comp.version,
		comp.comp_img,
		comp.create_time,
		comp.update_time,
		comp.comp_backupinfo,
		comp.apply_state,
		comp.apply_desc,
		comp.del_flag,
		d.id,
		d.comp_id,
		d.file_name,
		d.file_type,
		d.file_path,
		d.paraent_id,
		d.version,
		d.paraent_ids
	</sql>

	<!--component简单分页查询 -->
	<select id="getComponentPage" resultMap="componentMap">
		SELECT
		<include refid="componentSql" />
		FROM gjk_component
		<where>
			<if test="component.id != null and component.id.trim() != ''">
				AND id = #{component.id}
			</if>
			<if
				test="component.compId != null and component.compId.trim() != ''">
				AND comp_id = #{component.compId}
			</if>
			<if
				test="component.compName != null and component.compName.trim() != ''">
				AND comp_name = #{component.compName}
			</if>
			<if
				test="component.compFuncname != null and component.compFuncname.trim() != ''">
				AND comp_funcname = #{component.compFuncname}
			</if>
			<if test="component.userId != null">
				AND user_id = #{component.userId}
			</if>
			<if
				test="component.version != null and component.version.trim() != ''">
				AND version = #{component.version}
			</if>
			<if
				test="component.compImg != null and component.compImg.trim() != ''">
				AND comp_img = #{component.compImg}
			</if>
			<if
				test="component.createTime != null and component.createTime.trim() != ''">
				AND create_time = #{component.createTime}
			</if>
			<if
				test="component.updateTime != null and component.updateTime.trim() != ''">
				AND update_time = #{component.updateTime}
			</if>
			<if
				test="component.compBackupinfo != null and component.compBackupinfo.trim() != ''">
				AND comp_backupinfo = #{component.compBackupinfo}
			</if>
			<if
				test="component.applyState != null and component.applyState.trim() != ''">
				AND apply_state = #{component.applyState}
			</if>
			<if
				test="component.applyDesc != null and component.applyDesc.trim() != ''">
				AND apply_desc = #{component.applyDesc}
			</if>
			and del_flag = '0'
		</where>
		ORDER BY create_time DESC
	</select>


	<update id="deleteCompById">
		UPDATE gjk_component AS comp SET comp.del_flag = '1'
		<where>
			comp.id = #{id}
		</where>
	</update>

	<!-- listCompByUserId通过用户编号查询构件列表 -->
	<select id="listCompByUserId" resultMap="componentMap">
		select * from gjk_component
		<where>
			<if test="userId != null and userId.trim() != ''">
				AND user_id = #{userId}
			</if>
			and del_flag = '0'
		</where>
	</select>

	<!-- listCompByCompId通过构件编号查询构件列表 -->
	<select id="listCompByCompId" resultMap="componentMap">
		select * from gjk_component
		<where>
			<if test="compId != null and compId.trim() != ''">
				AND id = #{compId}
			</if>
			and del_flag = '0'
		</where>
	</select>

	<!-- 保存构件 -->
	<insert id="saveComp"
		parameterType="com.inforbus.gjk.comp.api.entity.Component">
		INSERT INTO gjk_component (
		id,
		comp_id,
		comp_name,
		comp_funcname,
		user_id,
		version,
		comp_img,
		comp_backupinfo,
		apply_state,
		<if test="comp.createTime != null">
			create_time,
		</if>
		apply_desc
		) VALUES (#{comp.id},
		#{comp.compId},
		#{comp.compName},
		#{comp.compFuncname},
		#{comp.userId},
		#{comp.version},
		#{comp.compImg},
		#{comp.compBackupinfo},
		#{comp.applyState},
		<if test="comp.createTime != null">
			#{comp.createTime},
		</if>
		#{comp.applyDesc})
	</insert>
	<update id="editComp"
		parameterType="com.inforbus.gjk.comp.api.entity.Component">
		UPDATE `gjk_component`
		<set>
			<if test="comp.compId != null and comp.compId.trim() != ''">
				`comp_id` = #{comp.compId},
			</if>
			<if test="comp.compName != null and comp.compName.trim() != ''">
				`comp_name` = #{comp.compName},
			</if>
			<if
				test="comp.compFuncname != null and comp.compFuncname.trim() != ''">
				`comp_funcname` = #{comp.compFuncname},
			</if>
			<if test="comp.compImg != null and comp.compImg.trim() != ''">
				`comp_img` = #{comp.compImg},
			</if>
			<if test="comp.version != null and comp.version.trim() != ''">
				`version` = #{comp.version},
			</if>
		</set>
		<where>
			`id` = #{comp.id}
		</where>
	</update>

	<select id="getVersionByCompId"
		parameterType="com.inforbus.gjk.comp.api.entity.Component"
		resultMap="componentMap">
		SELECT version FROM gjk_component
		<where>
			<if test="comp.compId != null and comp.compId.trim() != ''">
				AND comp_id=#{comp.compId}
			</if>
		</where>
	</select>

	<select id="getCompById"
		parameterType="com.inforbus.gjk.comp.api.entity.Component"
		resultMap="componentMap">
		SELECT * FROM gjk_component
		<where>
			<if test="id != null and id.trim() != ''">
				AND id = #{id}
			</if>
		</where>
	</select>

	<select id="getAllComp" resultMap="componentMap">
		SELECT
		<include refid="componentSql" />
		FROM gjk_component
	</select>

	<select id="findLibs" resultType="java.util.HashMap">
		<if test="type != null and type.trim() != '' ">
			<if test="type == 'testfile' ">
				SELECT test_id as id,name as name FROM `gjk_test` where
				test_id =#{libs}
			</if>
			<if test="type == 'algorithmfile' ">
				SELECT algorithm_id as id,name as name FROM
				`gjk_algorithm` where algorithm_id =#{libs}
			</if>
			<if test="type == 'platformfile' ">
				SELECT platform_id as id,name as name FROM `gjk_platform`
				where platform_id =#{libs}
			</if>
		</if>
	</select>

	<select id="getImgFile"
		resultType="com.inforbus.gjk.comp.api.entity.ComponentDetail">
		SELECT cd1.id,cd2.file_name,cd2.file_path FROM
		gjk_component_detail cd1, gjk_component_detail cd2
		WHERE
		cd1.id=cd2.paraent_id AND cd1.id=#{imgId}
	</select>
	<select id="getCommImgFile"
		resultType="com.inforbus.gjk.comp.api.entity.ComponentDetail">
		SELECT cd1.id,cd2.file_name,cd2.file_path FROM
		gjk_common_component_detail cd1, gjk_common_component_detail cd2
		WHERE
		cd1.id=cd2.paraent_id AND cd1.id=#{imgId}
	</select>

	<select id="queryTable" resultType="map">
		select table_name tableName,
		engine, table_comment tableComment, create_time createTime from
		information_schema.tables
		where table_schema = (select database()) and
		table_name = #{tableName}
	</select>

	<select id="queryColumns" resultType="map">
		select column_name
		columnName, data_type dataType, column_comment columnComment,
		column_key columnKey, extra from information_schema.columns
		where
		table_name = #{tableName} and table_schema = (select database())
		order
		by ordinal_position
	</select>
	<insert id="saveCompAndStruct">
		INSERT INTO `gjk_comp_struct`(`id`, `comp_id`,
		`struct_id`) VALUES
		(#{id}, #{compId}, #{structId})
	</insert>
	<delete id="deleteCompAndStruct">
		DELETE FROM `gjk_comp_struct` WHERE
		`comp_id`=#{compId}
	</delete>
	<select id="selectByComms" resultMap="componentMap">
		SELECT
		id,
		comp_id,
		comp_name,
		comp_funcname,
		user_id,
		version,
		comp_img,
		description
		FROM
		gjk_common_component WHERE id IN ( SELECT comp_id FROM
		gjk_project_comp a WHERE a.project_id = #{proId} AND a.can_use = 0)
	</select>

	<select id="checkComp" resultMap="componentMap">
		SELECT
		id,
		comp_id,
		comp_name,
		comp_funcname,
		user_id,
		version,
		comp_img,
		description
		FROM
		gjk_common_component WHERE comp_id IN
		<foreach collection="compIdList" item="compId" index="index"
			open="(" close=")" separator=",">
			#{compId}
		</foreach>
	</select>
	<!-- 保存结构体 -->
	<insert id="saveStructlibs"
		parameterType="com.inforbus.gjk.common.core.entity.Structlibs">
		INSERT INTO gjk_structlibs (
		id,
		parent_id,
		children_ids,
		name,
		sort,
		version,
		type,
		data_type,
		struct_type,
		data_length,
		permission
		)
		VALUES (
		#{structlibs.id},
		#{structlibs.parentId},
		#{structlibs.childrenIds},
		#{structlibs.name},
		#{structlibs.sort},
		#{structlibs.version},
		#{structlibs.type},
		#{structlibs.dataType},
		#{structlibs.structType},
		#{structlibs.dataLength},
		#{structlibs.permission})
	</insert>
	<!-- 根据id查询一条结构体数据 -->
	<select id="getStructlibsById" resultMap="structlibsMap">
		SELECT *
		FROM
		gjk_structlibs
		WHERE id=#{id}
	</select>

	<select id="getTestByIdNotDelete" resultMap="GjkTestMap">
		SELECT *
		FROM
		gjk_test
		WHERE test_id=#{id} and del_flag=0
	</select>

	<select id="getPlatformByIdNotDelete" resultMap="GjkPlatformMap">
		SELECT *
		FROM
		gjk_platform
		WHERE platform_id=#{id} and del_flag=0
	</select>

	<select id="getAlgorithmByIdNotDelete"
		resultMap="GjkAlgorithmMap">
		SELECT *
		FROM gjk_algorithm
		WHERE algorithm_id=#{id} and
		del_flag=0
	</select>

	<!-- ******************************************************************************************** -->
	<!-- upms模块用到的东西，用于展示库管理模块的树级关系 -->

	<!-- 获取构件建模模块选择的文件夹的信息 -->
	<select id="getLibsFile" resultMap="componentDetailMap">
		SELECT
		b.* FROM
		gjk_component_detail b WHERE b.paraent_id in
		(SELECT a.id FROM
		gjk_component_detail a WHERE a.libs_id = #{libsId})
	</select>

	<!-- 获取构件建模模块的信息 -->
	<select id="getLibsInfo" resultMap="componentDetailMap">
		SELECT * FROM
		gjk_common_component_detail
	</select>
	<!-- 根据libs_id获取构件建模模块属于哪个库信息 -->
	<select id="getLibsFileType" resultMap="componentDetailMap">
		SELECT * FROM
		gjk_component_detail WHERE libs_id = #{libsId}
	</select>
	<!-- 根据comp_id分组得到每个comp_id -->
	<select id="getCompIdsGroupCompId" resultType="java.lang.String">
		SELECT comp_id
		FROM gjk_common_component GROUP BY comp_id
	</select>
	<!-- 根据comp_id查询component -->
	<select id="getCompByCompId" resultMap="componentMap">
		SELECT * FROM
		gjk_common_component where comp_id = #{compId}
	</select>

	<!-- 根据componentid查询componentDetail -->
	<select id="getCompDetailByComponentId"
		resultMap="componentDetailMap">
		SELECT * FROM gjk_common_component_detail where comp_id =
		#{componentId} and file_name = #{fileName}
	</select>

	<!-- 根据详细表的comp_id找到主表里的comp_name -->
	<select id="getCompNameById" resultMap="componentMap">
		SELECT b.* FROM
		gjk_common_component b WHERE b.id =
		(SELECT a.comp_id FROM
		gjk_common_component_detail a WHERE a.id = #{id})
	</select>
	<!-- ******************************************************************************************** -->
	<select id="copyCompAndCommCompDb">
		<!-- 创建 新的gjk_common_component备份表 -->
		create table gjk_common_component_${timeStr} select * from
		gjk_common_component;
		<!-- 创建 新的 gjk_component 备份表 -->
		create table gjk_component_${timeStr} select * from gjk_component;
	</select>
</mapper>
